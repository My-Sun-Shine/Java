<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
    引用类型的自动注入： 让spring框架实现对引用类型的赋值。默认是不赋值的。
    Spring框架支持常用的自动注入byName, byType

        1.byName:按名称注入， java类中引用类型的[属性名]和spring容器中(xml配置文件)<bean>的[id名称]一样的
        且数据类型是一样的，这样的 bean能够赋值给引用类型
        指定byName的语法：
        <bean id="xx" class="yy" autowire="byName">
            ..
        </bean>

        2.byType：安装类型注入，java类中引用类型的【数据类型】和Spring容器(xml配置文件)<bean>的class是
        同源关系的bean，把这样的bean能够赋值到引用类型

        同源关系：
            1.java类中引用类型的数据类型和<bean>的class是一样的。
            2.java类中引用类型的数据类型和<bean>的class是父子类关系的。
            3.java类中引用类型的数据类型和<bean>的class是接口和实现类关系的。
        byType的使用语法
        <bean id="xxx" class="yyy" autowire="byType" >
            <property name="简单类型的属性名" value="属性值" />
        </bean>
        注意：在xml文件中，使用byType,符合条件的对象只能有一个，多余一个报错的
    -->

    <bean id="Student" class="spring.ioc.learn04.package02.Student" autowire="byType">
        <property name="name" value="张三" />
        <property name="age" value="20"  />
    </bean>

    <!--1.java类中引用类型的数据类型和<bean>的class是一样的-->
    <!--<bean id="school" class="spring.ioc.learn04.package02.School">
        <property name="name" value="清华大学" />
        <property name="address" value="北京海淀" />
    </bean>-->

    <!--2.java类中引用类型的数据类型和<bean>的class是父子类关系的-->
    <bean id="school" class="spring.ioc.learn04.package02.XiaoXueSchool">
        <property name="name" value="中心小学" />
        <property name="address" value="北京海淀" />
    </bean>
</beans>
        <!--
            加入约束文件：
            bean: 由spring创建和管理的java对象。叫做bean
        -->