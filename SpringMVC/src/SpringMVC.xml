<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- SpringMVC的配置文件：声明处理器对象，视图有关的对象 -->

    <!--
    声明处理器，处理用户的某个请求

    id:请求的uri地址，必须以“/”开头。 可以看做是<url-pattern>
    class:处理器类的全限定名称
    -->

    <bean id="/learn01/some.do" class="springmvc.learn01.controller.MyController"/>

    <!-- 声明组件扫描器，指定@Controller所在的奥名 -->
    <context:component-scan base-package="springmvc.learn02.controller,springmvc.learn04.controller,
    springmvc.learn05.controller,springmvc.learn06.controller,springmvc.learn07.controller,
    springmvc.learn08.controller,springmvc.learn09.controller,springmvc.learn10.controller,
    springmvc.learn11.controller" />
    <!-- 声明视图解析器，处理视图的 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 指定前缀： 视图的路径 -->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!-- 指定后缀：视图文件的扩展名 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 处理静态资源,把静态资源的请求交给default这个Servlet -->
    <mvc:default-servlet-handler/>

    <!--
           default-servlet-handler 和@RequestMapping有冲突的，导致静态资源可以访问
          但动态资源不能访问， 解决方式，加入注解驱动
     -->
    <mvc:annotation-driven />

    <!-- 声明自定义异常处理器 -->
    <bean class="springmvc.learn09.exceptions.CustomerExceptionResolver" />

    <!-- 声明拦截器，指定拦截的请求uri地址 -->
    <mvc:interceptors>
        <!-- 第一个拦截器 -->
        <mvc:interceptor>
            <!-- 拦截的uri地址 -->
            <mvc:mapping path="/learn11/some.do"/>
            <!-- 指定拦截器对象 -->
            <bean class="springmvc.learn11.interceptors.MyInterceptor" />
        </mvc:interceptor>

    </mvc:interceptors>
</beans>